{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/fernandomoreira/Documents/DevProj/Hotsite_DentalUNI_v0/src/scripts/Icon.tsx"],"sourcesContent":["import React, { forwardRef } from 'react'\nimport { icons } from './IconsList'\nimport { SVGProps } from 'react'\n\nexport interface IconProps extends SVGProps<SVGSVGElement> {\n  name: keyof typeof icons\n  className?: string\n  fill?: string\n  style?: React.CSSProperties\n  width?: number | string\n  height?: number | string\n}\n\nconst genericIcons: Record<string, string> = {\n  // √çcones de navega√ß√£o\n  duIconArrowDown: '‚ñº',\n  duIconArrowRight: '‚Üí',\n  duIconArrowLeft: '‚Üê',\n  duIconRight: '‚Ä∫',\n  duIconBurgerMenu: '‚ò∞',\n  duIconClear: '‚úï',\n\n  // √çcones de a√ß√£o\n  duIconDownload: '‚Üì',\n  duIconSupport: 'üí¨',\n  duIconLogin: 'üë§',\n  iconDocol: 'ü¶∑',\n  dentalIcon: 'ü¶∑'\n}\n\nexport const Icon = forwardRef<SVGSVGElement, IconProps>(({ name, className = '', fill, style, width, height }, ref) => {\n  // Primeiro tenta usar o √≠cone gen√©rico\n  const genericIcon = genericIcons[name]\n  if (genericIcon) {\n    return (\n      <span className={className} aria-hidden=\"true\">\n        {genericIcon}\n      </span>\n    )\n  }\n\n  // Se n√£o encontrar √≠cone gen√©rico, tenta usar o componente SVG\n  const IconComponent = icons[name]\n  if (IconComponent) {\n    return <IconComponent className={className} fill={fill} style={style} width={width} height={height} ref={ref} />\n  }\n\n  console.warn(`Icon \"${name}\" not found`)\n  return null\n}) "],"names":[],"mappings":";;;;AAAA;AACA;;;;AAYA,MAAM,eAAuC;IAC3C,sBAAsB;IACtB,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,aAAa;IAEb,iBAAiB;IACjB,gBAAgB;IAChB,eAAe;IACf,aAAa;IACb,WAAW;IACX,YAAY;AACd;AAEO,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAA4B,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;IAC9G,uCAAuC;IACvC,MAAM,cAAc,YAAY,CAAC,KAAK;IACtC,IAAI,aAAa;QACf,qBACE,8OAAC;YAAK,WAAW;YAAW,eAAY;sBACrC;;;;;;IAGP;IAEA,+DAA+D;IAC/D,MAAM,gBAAgB,4HAAA,CAAA,QAAK,CAAC,KAAK;IACjC,IAAI,eAAe;QACjB,qBAAO,8OAAC;YAAc,WAAW;YAAW,MAAM;YAAM,OAAO;YAAO,OAAO;YAAO,QAAQ;YAAQ,KAAK;;;;;;IAC3G;IAEA,QAAQ,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,WAAW,CAAC;IACvC,OAAO;AACT"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}